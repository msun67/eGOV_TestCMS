<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="egovframework.cms.board.mapper.BoardMapper">

<resultMap id="BoardResultMap" type="egovframework.cms.board.service.BoardVO">
    <result property="boardId" column="board_id"/>
    <result property="userUuid" column="user_uuid"/>
    <result property="boardTitle" column="board_title"/>
    <result property="boardContent" column="board_content"/>
    <result property="viewCnt" column="view_cnt"/>
    <result property="isDeleted" column="is_deleted"/>
    <result property="deletedAt" column="deleted_at"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="boardCode" column="board_code"/>
</resultMap>
<resultMap id="BoardFileResultMap" type="egovframework.cms.board.service.BoardFileVO">
    <id property="fileId" column="file_id" />
    <result property="boardId" column="board_id" />
    <result property="originalName" column="original_name" />
    <result property="saveName" column="save_name" />
    <result property="filePath" column="file_path" />
    <result property="fileSize" column="file_size" />
    <result property="fileType" column="file_type" />
    <result property="isDeleted" column="is_deleted" />
    <result property="uploadedAt" column="uploaded_at" />
    <result property="deletedAt" column="deleted_at" />
</resultMap>

    <!-- 게시판 목록 조회 -->
    <select id="getBoardList" resultMap="BoardResultMap" parameterType="SearchVO">
        SELECT *
	    FROM board_post
	    WHERE is_deleted = FALSE
	     <if test="boardCode != null and boardCode != ''">
	        AND board_code = #{boardCode}
	    </if>
	    <if test="keyword != null and keyword != ''">
	        AND (
	            <choose>
	                <when test="condition == 'title'">
	                    board_title LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <when test="condition == 'content'">
	                    board_content LIKE CONCAT('%', #{keyword}, '%')
	                </when>
	                <otherwise>
	                    board_title LIKE CONCAT('%', #{keyword}, '%')
	                    OR board_content LIKE CONCAT('%', #{keyword}, '%')
	                </otherwise>
	            </choose>
	        )
	    </if>
	    ORDER BY created_at DESC
	    LIMIT #{offset}, #{size}
	</select> 
	
	<!-- 전체 게시글 수 -->
	<select id="getBoardListCnt" resultType="int" parameterType="SearchVO">
	    SELECT COUNT(*) 
	    FROM board_post 
	    WHERE is_deleted = FALSE
	    <if test="boardCode != null and boardCode != ''">
	        AND board_code = #{boardCode}
	    </if>
	    <if test="condition != null and keyword != null and keyword != ''">
	        <choose>
	            <when test="condition == 'title'">
	                AND board_title LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	            <when test="condition == 'content'">
	                AND board_content LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	            <otherwise>
	                AND (board_title LIKE CONCAT('%', #{keyword}, '%')
	                OR board_content LIKE CONCAT('%', #{keyword}, '%'))
	            </otherwise>
	        </choose>
	    </if>
	</select>
    
    <!-- 게시판 상세 조회 -->
    <select id="getBoardDetail" resultMap="BoardResultMap">
    	SELECT * 
    	FROM board_post
    	WHERE board_id = #{boardId}
    </select>
    
    <!-- 이전글 -->
	<select id="getPrevPost" resultMap="BoardResultMap">
	<![CDATA[
	    SELECT *
	    FROM board_post
	    WHERE board_code = #{boardCode}
	      AND created_at < #{createdAt}
	      AND is_deleted = FALSE
	    ORDER BY created_at DESC
	    LIMIT 1
	 ]]>
	</select>
	
	<!-- 다음글 -->
	<select id="getNextPost" resultMap="BoardResultMap">
	<![CDATA[
	    SELECT *
	    FROM board_post
	    WHERE board_code = #{boardCode}
	      AND created_at > #{createdAt}
	      AND is_deleted = FALSE
	    ORDER BY created_at ASC
	    LIMIT 1
	 ]]>
	</select>
    
    <!-- 게시글 조회수 증가 -->
    <update id="updateViewCount" parameterType="int">
    	UPDATE board_post
    	SET view_cnt = view_cnt + 1
    	WHERE board_id = #{boardId}
    </update>
    
    <!-- 게시글 등록 -->
    <insert id="insertBoard" parameterType="BoardVO" useGeneratedKeys="true" keyProperty="boardId">
    	INSERT INTO board_post
    	(user_uuid, board_code, board_title, board_content, created_at)
    	VALUES
    	(#{userUuid}, #{boardCode}, #{boardTitle}, #{boardContent}, NOW())
    </insert>
    
    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="BoardVO">
    	UPDATE board_post
    	SET board_code = #{boardCode},
        	board_title = #{boardTitle},
        	board_content = #{boardContent},
        	updated_at = NOW()
        WHERE board_id = #{boardId}
    </update>
    
    <!-- 게시글 삭제 클릭시 
    	deleted_at 시간 업데이트, is_deleted True 처리 -->
	<update id="deleteBoard" parameterType="int">
	    UPDATE board_post
	    SET is_deleted = TRUE, deleted_at = NOW()
	    WHERE board_id = #{boardId}
	</update>
	
	<!-- 삭제한 게시글 아카이브 테이블에 보관 -->
	<insert id="archiveBoard" parameterType="BoardVO">
	    INSERT INTO board_post_archive (
	        archive_id, user_uuid, board_code, archive_title, archive_content,
	        archive_view_cnt, archived_at, deleted_at
	    )
	    VALUES (
	        #{boardId}, #{userUuid}, #{boardCode}, #{boardTitle}, #{boardContent},
	        #{viewCnt}, NOW(), DATE_ADD(NOW(), INTERVAL 90 DAY)
	    )
	</insert>
	
	<!-- 아카이브 데이터 삭제 (90일 보관) -->
	<delete id="deleteOldArchivedBoards">
	<![CDATA[
	    DELETE FROM board_post_archive
	    WHERE deleted_at <= NOW()
	 ]]>
	</delete>
	
	<!-- 첨부파일 테이블에 데이터 삽입 -->
	<insert id="insertFile" parameterType="BoardFileVO">
	    INSERT INTO board_file (
	        board_id, original_name, save_name, file_path, file_size, file_type
	    ) VALUES (
	        #{boardId}, #{originalName}, #{saveName}, #{filePath}, #{fileSize}, #{fileType}
	    )
	</insert>
	<!-- 실제 파일 DB에서 삭제 & 기존 첨부파일 교체 시 삭제할 대상으로 입력 -->
	<delete id="deleteFilesByIds" parameterType="list">
	    DELETE FROM board_file
	    WHERE file_id IN 
	    <foreach item="id" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	</delete>
	<!-- 게시글 상세보기시 첨부파일 목록 조회 -->
	<select id="selectFilesByBoardId" parameterType="int" resultMap="BoardFileResultMap">
	    SELECT * FROM board_file
	    WHERE board_id = #{boardId} 
	    AND is_deleted = FALSE
	    ORDER BY uploaded_at ASC
	</select>
	
	<select id="getFilesByIds" parameterType="list" resultType="BoardFileVO">
	   SELECT * FROM board_file
	   WHERE file_id IN
	   <foreach item="id" collection="list" open="(" separator="," close=")">
	       #{id}
	   </foreach>
	</select>

	
	
	<select id="getFileIdsByBoardId" parameterType="int" resultType="int">
	    SELECT file_id FROM board_file WHERE board_id = #{boardId}
	</select>
	
	
	
	<!-- 아래부터 대시보드용 쿼리-->
	<!-- 전체 게시글 수 (삭제 제외, 필터 없음)  -->
	<select id="countAllPosts" resultType="int">
	    SELECT COUNT(*)
	    FROM board_post
	    WHERE is_deleted = FALSE
	</select>
	
	<!-- 공지사항 최근 게시글 -->
	<select id="selectRecentByBoardCode" parameterType="map" resultMap="BoardResultMap">
        SELECT
            board_id,
            board_title,
            board_code,   
            created_at 
        FROM board_post
        WHERE is_deleted = FALSE
          AND board_code = #{boardCode}
        ORDER BY created_at DESC      
        LIMIT #{limit}
    </select>
    
    <!-- 오늘 등록글 -->
    <select id="countTodayPosts" resultType="int">
    <![CDATA[
	    SELECT COUNT(*)
	    FROM board_post
	    WHERE is_deleted = FALSE
	      AND created_at >= CURRENT_DATE()
	      AND created_at <  CURRENT_DATE() + INTERVAL 1 DAY
	]]>
	</select>
	
	<!-- 최근 게시글 + 첨부파일 수 포함 -->
	<select id="selectRecentWithFileCount" parameterType="map" resultMap="BoardResultMap">
	    SELECT
	        p.board_id,
	        p.board_code,
	        p.board_title,
	        p.user_uuid,
	        p.created_at,
	        p.view_cnt,
	        COALESCE(f.cnt, 0) AS fileCount
	    FROM board_post p	    	
	    LEFT JOIN (
	      SELECT bf.board_id, COUNT(*) AS cnt
	      FROM board_file bf
	      WHERE bf.is_deleted = FALSE
	      GROUP BY bf.board_id
	    ) f ON f.board_id = p.board_id
	    WHERE p.is_deleted = 0
	    ORDER BY p.created_at DESC
	    LIMIT #{limit}
  </select>
    
    
</mapper>