<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 🔹 접근 권한 설정 -->
    <http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint">
        <!-- 로그인/회원가입 페이지는 모두 허용 -->
        <intercept-url pattern="/main.do" access="permitAll"/>
        <intercept-url pattern="/loginProcess.do" access="permitAll"/>
        <intercept-url pattern="/signup.do" access="permitAll"/>
        <intercept-url pattern="/signupProcess.do" access="permitAll"/>
        <intercept-url pattern="/checkUserId.do" access="permitAll"/>
        <intercept-url pattern="/dashboard.do" access="isAuthenticated()" />

        <!-- 권한별 접근 페이지 -->
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/org/**" access="hasRole('ROLE_ORG')"/>
        <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>

        <!-- 🔹 form-login 대신 Custom Filter 사용 -->
        <custom-filter position="FORM_LOGIN_FILTER" ref="customAuthenticationFilter"/>

        <logout logout-url="/logout.do" logout-success-url="/main.do" invalidate-session="true"  delete-cookies="JSESSIONID"/>
        <csrf disabled="false"/>
    </http>

    <!-- 🔹 로그인 페이지 (비로그인 사용자가 접근 시) -->
    <beans:bean id="authenticationEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg value="/main.do"/>
    </beans:bean>

    <!-- ✅ Custom Authentication Provider -->
    <beans:bean id="customAuthenticationProvider"
                class="egovframework.cms.member.security.provider.CustomAuthenticationProvider">
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>

    <!-- ✅ Custom Authentication Filter -->
    <beans:bean id="customAuthenticationFilter"
                class="egovframework.cms.member.security.filter.CustomAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="filterProcessesUrl" value="/loginProcess.do"/>
        <beans:property name="usernameParameter" value="username"/>
        <beans:property name="passwordParameter" value="password"/>
        <beans:property name="userTypeParameter" value="userType"/>
        <beans:property name="authenticationSuccessHandler" ref="customAuthSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="customAuthFailureHandler"/>
    </beans:bean>

    <!-- ✅ Authentication Manager -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager>

    <!-- ✅ 비밀번호 암호화 -->
    <beans:bean id="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- ✅ 로그인 성공/실패 핸들러 -->
    <beans:bean id="customAuthSuccessHandler"
                class="egovframework.cms.member.security.handler.CustomAuthSuccessHandler"/>
    <beans:bean id="customAuthFailureHandler"
                class="egovframework.cms.member.security.handler.CustomAuthFailureHandler"/>  
                
    <!-- JSP에서 권한 검사 <sec:authorize> 태그 활성화-->            
    <security:global-method-security secured-annotations="enabled" />            

</beans:beans>
